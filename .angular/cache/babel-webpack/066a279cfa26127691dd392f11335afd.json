{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/sort\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/paginator\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\n\nfunction FlexTableComponent_ng_container_7_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const disCol_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(disCol_r6);\n  }\n}\n\nfunction FlexTableComponent_ng_container_7_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    const disCol_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r11[disCol_r6]);\n  }\n}\n\nfunction FlexTableComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 12);\n    i0.ɵɵtemplate(1, FlexTableComponent_ng_container_7_th_1_Template, 2, 1, \"th\", 7);\n    i0.ɵɵtemplate(2, FlexTableComponent_ng_container_7_td_2_Template, 2, 1, \"td\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const disCol_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"matColumnDef\", disCol_r6);\n  }\n}\n\nfunction FlexTableComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \"Action\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FlexTableComponent_td_10_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function FlexTableComponent_td_10_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const row_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.updateRow(row_r13);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"done\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FlexTableComponent_td_10_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function FlexTableComponent_td_10_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const row_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.editRow(row_r13);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FlexTableComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtemplate(1, FlexTableComponent_td_10_button_1_Template, 3, 0, \"button\", 15);\n    i0.ɵɵtemplate(2, FlexTableComponent_td_10_button_2_Template, 3, 0, \"button\", 15);\n    i0.ɵɵelementStart(3, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function FlexTableComponent_td_10_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const row_r13 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.deleteRow(row_r13);\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r13.edit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r13.edit);\n  }\n}\n\nfunction FlexTableComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n}\n\nfunction FlexTableComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\n\nexport let FlexTableComponent = /*#__PURE__*/(() => {\n  class FlexTableComponent {\n    constructor(_snackBar) {\n      this._snackBar = _snackBar;\n      this.pageSize = 10;\n      this.crudAPI = [{}];\n    }\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('data')) {\n        if (this.data) this.data.forEach(element => {\n          element.edit = false;\n        });\n        this.dataTable = new MatTableDataSource(this.data);\n        this.dataTable.paginator = this.paginator;\n        this.dataTable.sort = this.sort;\n      }\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      if (this.displayedColumns) this.displayedColumns.push('Action');\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataTable.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataTable.paginator) {\n        this.dataTable.paginator.firstPage();\n      }\n    }\n\n    updateRow(row) {\n      if (!this.crudAPI['update']) {\n        this._snackBar.open(\"Update API endpoint not provided\", \"Close\", {\n          duration: 5000\n        });\n      }\n    }\n\n    editRow(row) {\n      if (!this.crudAPI['edit']) {\n        this._snackBar.open(\"Edit API endpoint not provided\", \"Close\", {\n          duration: 5000\n        });\n      }\n    }\n\n    deleteRow(row) {\n      if (!this.crudAPI['delete']) {\n        this._snackBar.open(\"Delete API endpoint not provided\", \"Close\", {\n          duration: 5000\n        });\n      }\n    }\n\n  }\n\n  FlexTableComponent.ɵfac = function FlexTableComponent_Factory(t) {\n    return new (t || FlexTableComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar));\n  };\n\n  FlexTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlexTableComponent,\n    selectors: [[\"app-flex-table\"]],\n    viewQuery: function FlexTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatTable, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    inputs: {\n      data: \"data\",\n      pageSize: \"pageSize\",\n      displayedColumns: \"displayedColumns\",\n      crudAPI: \"crudAPI\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 14,\n    vars: 7,\n    consts: [[\"appearance\", \"standard\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Mia\", 3, \"keyup\"], [\"input\", \"\"], [1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"matSort\", \"\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"matColumnDef\", \"Action\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-label\", \"Select page of users\", 3, \"pageSizeOptions\", \"pageSize\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function FlexTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-label\");\n        i0.ɵɵtext(2, \"Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1, 2);\n        i0.ɵɵlistener(\"keyup\", function FlexTableComponent_Template_input_keyup_3_listener($event) {\n          return ctx.applyFilter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"table\", 4);\n        i0.ɵɵtemplate(7, FlexTableComponent_ng_container_7_Template, 3, 1, \"ng-container\", 5);\n        i0.ɵɵelementContainerStart(8, 6);\n        i0.ɵɵtemplate(9, FlexTableComponent_th_9_Template, 2, 0, \"th\", 7);\n        i0.ɵɵtemplate(10, FlexTableComponent_td_10_Template, 6, 2, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(11, FlexTableComponent_tr_11_Template, 1, 0, \"tr\", 9);\n        i0.ɵɵtemplate(12, FlexTableComponent_tr_12_Template, 1, 0, \"tr\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"mat-paginator\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataTable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.displayedColumns);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0))(\"pageSize\", ctx.pageSize);\n      }\n    },\n    directives: [i2.MatFormField, i2.MatLabel, i3.MatInput, i4.MatTable, i5.MatSort, i6.NgForOf, i4.MatColumnDef, i4.MatHeaderCellDef, i4.MatCellDef, i4.MatHeaderRowDef, i4.MatRowDef, i7.MatPaginator, i4.MatHeaderCell, i4.MatCell, i6.NgIf, i8.MatButton, i9.MatIcon, i4.MatHeaderRow, i4.MatRow],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{width:25%;text-align:initial}td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], th[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:50%}td[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%], th[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:80%}\"]\n  });\n  return FlexTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}