{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/sort\";\nimport * as i6 from \"@angular/material/paginator\";\n\nfunction FlexTableComponent_div_5_ng_container_2_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const disCol_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(disCol_r5);\n  }\n}\n\nfunction FlexTableComponent_div_5_ng_container_2_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    const disCol_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r10[disCol_r5]);\n  }\n}\n\nfunction FlexTableComponent_div_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 10);\n    i0.ɵɵtemplate(1, FlexTableComponent_div_5_ng_container_2_th_1_Template, 2, 1, \"th\", 11);\n    i0.ɵɵtemplate(2, FlexTableComponent_div_5_ng_container_2_td_2_Template, 2, 1, \"td\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const disCol_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"matColumnDef\", disCol_r5);\n  }\n}\n\nfunction FlexTableComponent_div_5_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n\nfunction FlexTableComponent_div_5_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\n\nfunction FlexTableComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"table\", 5);\n    i0.ɵɵtemplate(2, FlexTableComponent_div_5_ng_container_2_Template, 3, 1, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, FlexTableComponent_div_5_tr_3_Template, 1, 0, \"tr\", 7);\n    i0.ɵɵtemplate(4, FlexTableComponent_div_5_tr_4_Template, 1, 0, \"tr\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-paginator\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0))(\"pageSize\", ctx_r1.pageSize);\n  }\n}\n\nexport let FlexTableComponent = /*#__PURE__*/(() => {\n  class FlexTableComponent {\n    constructor() {}\n\n    ngOnChanges(changes) {\n      // if(!this.dataSource) return;\n      console.log(\"Changes...\");\n      console.log(this.dataSource);\n\n      if (this.dataSource) {\n        // if(changes['dataSource']) {\n        // console.log('data changed...');\n        this.data = this.dataSource;\n        this.data.paginator = this.paginator;\n        this.data.sort = this.sort; // this.table.renderRows();\n      }\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {}\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n  }\n\n  FlexTableComponent.ɵfac = function FlexTableComponent_Factory(t) {\n    return new (t || FlexTableComponent)();\n  };\n\n  FlexTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlexTableComponent,\n    selectors: [[\"app-flex-table\"]],\n    viewQuery: function FlexTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatTable, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    inputs: {\n      dataSource: \"dataSource\",\n      data: \"data\",\n      displayedColumns: \"displayedColumns\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 1,\n    consts: [[\"appearance\", \"standard\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Mia\", 3, \"keyup\"], [\"input\", \"\"], [\"class\", \"mat-elevation-z8\", 4, \"ngIf\"], [1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"matSort\", \"\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-label\", \"Select page of users\", 3, \"pageSizeOptions\", \"pageSize\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function FlexTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-label\");\n        i0.ɵɵtext(2, \"Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1, 2);\n        i0.ɵɵlistener(\"keyup\", function FlexTableComponent_Template_input_keyup_3_listener($event) {\n          return ctx.applyFilter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, FlexTableComponent_div_5_Template, 6, 7, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.data);\n      }\n    },\n    directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.NgIf, i4.MatTable, i5.MatSort, i3.NgForOf, i4.MatHeaderRowDef, i4.MatRowDef, i6.MatPaginator, i4.MatColumnDef, i4.MatHeaderCellDef, i4.MatCellDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{width:25%;text-align:initial}td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], th[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:50%}td[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%], th[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:80%}\"]\n  });\n  return FlexTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}