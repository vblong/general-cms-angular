{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/checkbox\";\nimport * as i2 from \"@angular/common\";\n\nfunction FlexCheckboxComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function FlexCheckboxComponent_li_11_Template_mat_checkbox_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const subtask_r1 = restoredCtx.$implicit;\n      return subtask_r1.completed = $event;\n    })(\"ngModelChange\", function FlexCheckboxComponent_li_11_Template_mat_checkbox_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateAllComplete();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subtask_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", subtask_r1.completed)(\"color\", subtask_r1.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subtask_r1.name, \" \");\n  }\n}\n\nexport let FlexCheckboxComponent = /*#__PURE__*/(() => {\n  class FlexCheckboxComponent {\n    constructor() {\n      this.name = \"New Box\";\n      this.items = [];\n      this.states = [];\n      this.task = {\n        name: 'Indeterminate',\n        completed: false,\n        color: 'primary',\n        subtasks: [{\n          name: 'Primary',\n          completed: false,\n          color: 'primary'\n        }, {\n          name: 'Accent',\n          completed: false,\n          color: 'accent'\n        }, {\n          name: 'Warn',\n          completed: false,\n          color: 'warn'\n        }]\n      };\n      this.allComplete = false;\n    }\n\n    ngOnInit() {}\n\n    updateAllComplete() {\n      this.allComplete = this.task.subtasks != null && this.task.subtasks.every(t => t.completed);\n    }\n\n    someComplete() {\n      if (this.task.subtasks == null) {\n        return false;\n      }\n\n      return this.task.subtasks.filter(t => t.completed).length > 0 && !this.allComplete;\n    }\n\n    setAll(completed) {\n      this.allComplete = completed;\n\n      if (this.task.subtasks == null) {\n        return;\n      }\n\n      this.task.subtasks.forEach(t => t.completed = completed);\n    }\n\n  }\n\n  FlexCheckboxComponent.ɵfac = function FlexCheckboxComponent_Factory(t) {\n    return new (t || FlexCheckboxComponent)();\n  };\n\n  FlexCheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlexCheckboxComponent,\n    selectors: [[\"app-flex-checkbox\"]],\n    inputs: {\n      name: \"name\",\n      items: \"items\"\n    },\n    outputs: {\n      states: \"states\"\n    },\n    decls: 15,\n    vars: 7,\n    consts: [[1, \"example-section\"], [1, \"example-margin\"], [1, \"example-margin\", 3, \"disabled\"], [1, \"example-list-section\"], [1, \"example-margin\", 3, \"checked\", \"color\", \"indeterminate\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [1, \"box-shadow\"], [3, \"ngModel\", \"color\", \"ngModelChange\"]],\n    template: function FlexCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"mat-checkbox\", 1);\n        i0.ɵɵtext(2, \"Check me!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-checkbox\", 2);\n        i0.ɵɵtext(4, \"Disabled\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"section\", 0);\n        i0.ɵɵelementStart(6, \"span\", 3);\n        i0.ɵɵelementStart(7, \"mat-checkbox\", 4);\n        i0.ɵɵlistener(\"change\", function FlexCheckboxComponent_Template_mat_checkbox_change_7_listener($event) {\n          return ctx.setAll($event.checked);\n        });\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 3);\n        i0.ɵɵelementStart(10, \"ul\");\n        i0.ɵɵtemplate(11, FlexCheckboxComponent_li_11_Template, 3, 3, \"li\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵelementStart(13, \"h3\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.allComplete)(\"color\", ctx.task.color)(\"indeterminate\", ctx.someComplete());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.task.name, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.task.subtasks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.name);\n      }\n    },\n    directives: [i1.MatCheckbox, i2.NgForOf],\n    styles: [\"\"]\n  });\n  return FlexCheckboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}